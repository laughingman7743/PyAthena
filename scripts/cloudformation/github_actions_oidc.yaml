Parameters:
  GitHubOrg:
    Type: String
  RepositoryName:
    Type: String
  RoleName:
    Type: String
    Default: "github-actions-oidc-pyathena"
  SparkRoleName:
    Type: String
    Default: "pyathena-spark"
  BucketName:
    Type: String
  WorkGroupName:
    Type: String
    Default: "pyathena"
  SparkWorkGroupName:
    Type: String
    Default: "pyathena-spark"
  OIDCProviderArn:
    Type: String
    Default: ""
    Description: Arn for the GitHub OIDC Provider.

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${RoleName}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub "repo:${GitHubOrg}/${RepositoryName}:*"
      Policies:
        - PolicyName: athena-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "athena:*"
                ]
                Resource: [
                  "*"
                ]
        - PolicyName: glue-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "glue:CreateDatabase",
                  "glue:DeleteDatabase",
                  "glue:GetDatabase",
                  "glue:GetDatabases",
                  "glue:UpdateDatabase",
                  "glue:CreateTable",
                  "glue:DeleteTable",
                  "glue:BatchDeleteTable",
                  "glue:UpdateTable",
                  "glue:GetTable",
                  "glue:GetTables",
                  "glue:BatchCreatePartition",
                  "glue:CreatePartition",
                  "glue:DeletePartition",
                  "glue:BatchDeletePartition",
                  "glue:UpdatePartition",
                  "glue:GetPartition",
                  "glue:GetPartitions",
                  "glue:BatchGetPartition"
                ]
                Resource: [
                  "*"
                ]
        - PolicyName: s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "s3:GetBucketLocation",
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:ListBucketMultipartUploads",
                  "s3:ListMultipartUploadParts",
                  "s3:AbortMultipartUpload",
                  "s3:CreateBucket",
                  "s3:PutObject",
                  "s3:PutBucketPublicAccessBlock",
                  "s3:DeleteObject"
                ]
                Resource: [
                  !Sub "arn:aws:s3:::${BucketName}*"
                ]
  SparkRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${SparkRoleName}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: "athena.amazonaws.com"
            Condition:
              StringEquals:
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike:
                "aws:SourceArn": !Sub "arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${SparkWorkGroupName}"
      Policies:
        - PolicyName: athena-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "athena:GetWorkGroup",
                  "athena:TerminateSession",
                  "athena:GetSession",
                  "athena:GetSessionStatus",
                  "athena:ListSessions",
                  "athena:StartCalculationExecution",
                  "athena:GetCalculationExecutionCode",
                  "athena:StopCalculationExecution",
                  "athena:ListCalculationExecutions",
                  "athena:GetCalculationExecution",
                  "athena:GetCalculationExecutionStatus",
                  "athena:ListExecutors",
                  "athena:ExportNotebook",
                  "athena:UpdateNotebook"
                ]
                Resource: [
                  !Sub "arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${SparkWorkGroupName}"
                ]
        - PolicyName: glue-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "glue:CreateDatabase",
                  "glue:DeleteDatabase",
                  "glue:GetDatabase",
                  "glue:GetDatabases",
                  "glue:UpdateDatabase",
                  "glue:CreateTable",
                  "glue:DeleteTable",
                  "glue:BatchDeleteTable",
                  "glue:UpdateTable",
                  "glue:GetTable",
                  "glue:GetTables",
                  "glue:BatchCreatePartition",
                  "glue:CreatePartition",
                  "glue:DeletePartition",
                  "glue:BatchDeletePartition",
                  "glue:UpdatePartition",
                  "glue:GetPartition",
                  "glue:GetPartitions",
                  "glue:BatchGetPartition"
                ]
                Resource: [
                  "*"
                ]
        - PolicyName: s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "s3:PutObject",
                  "s3:ListBucket",
                  "s3:DeleteObject",
                  "s3:GetObject"
                ]
                Resource: [
                  !Sub "arn:aws:s3:::${BucketName}*"
                ]
        - PolicyName: cloudwatch-log-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: [
                  "logs:CreateLogStream",
                  "logs:DescribeLogStreams",
                  "logs:CreateLogGroup",
                  "logs:PutLogEvents"
                ]
                Resource: [
                  !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-athena:*",
                  !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-athena*:log-stream:*"
                ]
              - Effect: Allow
                Action: [
                  "logs:DescribeLogGroups"
                ]
                Resource: [
                  !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
                ]

  WorkGroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Sub "${WorkGroupName}"
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: false
        PublishCloudWatchMetricsEnabled: false
        RequesterPaysEnabled: false
        EngineVersion:
          SelectedEngineVersion: "Athena engine version 3"
        ResultConfiguration:
          OutputLocation: !Sub "s3://${BucketName}/workgroup=${WorkGroupName}/"

  SparkWorkGroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Sub "${SparkWorkGroupName}"
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: false
        PublishCloudWatchMetricsEnabled: false
        RequesterPaysEnabled: false
        EngineVersion:
          SelectedEngineVersion: "PySpark engine version 3"
        ResultConfiguration:
          OutputLocation: !Sub "s3://${BucketName}/workgroup=${SparkWorkGroupName}/"
        ExecutionRole: !GetAtt SparkRole.Arn

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd

Outputs:
  Role:
    Value: !GetAtt Role.Arn
