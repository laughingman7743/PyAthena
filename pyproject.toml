[tool.poetry]
name = "PyAthena"
version = "3.0.10"  # https://github.com/laughingman7743/PyAthena/blob/master/pyathena/__init__.py#L10
description = "Python DB API 2.0 (PEP 249) client for Amazon Athena"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Database :: Front-Ends",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
homepage = "https://github.com/laughingman7743/PyAthena/"
authors = [
    "laughingman7743 <laughingman7743@gmail.com>"
]
readme = "README.rst"
packages = [
    { include = "pyathena" },
]
include = [
    { path = "pyathena/py.typed" },
]

[tool.poetry.dependencies]
# https://bugs.python.org/issue38342
python = ">=3.8.1"
boto3 = ">=1.26.4"
botocore = ">=1.29.4"
tenacity = ">=4.1.0"
fsspec = "*"
sqlalchemy = {version = ">=1.0.0", optional = true}
pandas = {version = ">=1.3.0", optional = true}
pyarrow = {version = ">=7.0.0", optional = true}
fastparquet = {version = ">=0.4.0", optional = true}

[tool.poetry.group.dev.dependencies]
tox = "*"
tox-gh-actions = "*"
wheel = "*"
twine = "*"
sqlalchemy = ">=1.0.0"
pandas = ">=1.3.0"
numpy = ">=1.24.0"
pyarrow = ">=7.0.0"
fastparquet = ">=0.4.0"
Jinja2 = ">=3.1.0"
isort = ">=5.10.1"
black = ">=22.3.0"
mypy = ">=0.900"
flake8 = "*"
pytest = ">=3.5"
pytest-cov = "*"
pytest-xdist = "*"

[tool.poetry.extras]
pandas = ["pandas"]
sqlalchemy = ["sqlalchemy"]
arrow = ["pyarrow"]
fastparquet = ["fastparquet"]

[tool.poetry.plugins."sqlalchemy.dialects"]
"awsathena" = "pyathena.sqlalchemy.base:AthenaDialect"
"awsathena.rest" = "pyathena.sqlalchemy.rest:AthenaRestDialect"
"awsathena.pandas" = "pyathena.sqlalchemy.pandas:AthenaPandasDialect"
"awsathena.arrow" = "pyathena.sqlalchemy.arrow:AthenaArrowDialect"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py{38,39,310,311},py{38,39,310,311}-sqla

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
allowlist_externals =
    poetry
    make
commands =
    poetry install -v
    make test
passenv =
    AWS_*
    TOXENV
    GITHUB_*

[testenv:py{38,39,310,311}-sqla]
commands =
    poetry install -v
    make test-sqla
"""

[tool.pytest.ini_options]
norecursedirs = ["benchmarks", ".poetry", ".tox"]

[tool.black]
line-length = 100
target-version = ['py38']
exclude = '(\.poetry|\.tox)'

[tool.isort]
profile = "black"
multi_line_output = 3
skip_glob = [".poetry/*", ".tox/*"]

[tool.mypy]
python_version = 3.8
follow_imports = "silent"
disallow_any_generics = true
strict_optional = true
check_untyped_defs = true
allow_redefinition = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
exclude = ["benchmarks.*", "tests.*", ".poetry.*", ".tox.*"]

[tool.sqla_testing]
requirement_cls = "pyathena.sqlalchemy.requirements:Requirements"
profile_file = "tests/sqlalchemy/profiles.txt"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
